{
  "$schema": "http://json-schema.org/draft-07/schema#",
  "type": "object",
  "properties": {
    "version": {
      "type": "string",
      "pattern": "^[0-9]+.[0-9]+.[0-9]+$"
    },
    "sections": {
      "type": "object",
      "patternProperties": {
        "[a-z]": {
          "type": "array",
          "items": {
            "type": "object",
            "contains": {
              "type": "string"
            },
            "properties": {
              "answer": {
                "type": "object",
                "properties": {
                  "max_duration": {
                    "type": "integer",
                    "description": "Maximum duration in seconds. Optional Can not be less than 7 seconds. Default is 14100 seconds (4 hours)."
                  }
                }
              },
              "connect": {
                "type": "object",
                "properties": {
                  "from": {
                    "type": "string",
                    "description": ""
                  },
                  "headers": {
                    "type": "object",
                    "description": "Custom SIP headers to add to INVITE. Has no effect on calls to phone numbers. Optional. Default is not set."
                  },
                  "codecs": {
                    "type": "string",
                    "description": "Comma-separated string of codecs to offer. Has no effect on calls to phone numbers. Optional. Default is set based on SignalWire settings."
                  },
                  "webrtc_media": {
                    "type": "boolean",
                    "description": "If true, WebRTC media is offered to the SIP endpoint. Has no effect on calls to phone numbers. Optional. Default is false."
                  },
                  "session_timeout": {
                    "type": "integer",
                    "description": "Time, in seconds, to set the SIP Session-Expires header in INVITE. Must be a positive, non-zero number. Has no effect on calls to phone numbers. Optional. Default is set based on SignalWire settings."
                  },
                  "ringback": {
                    "type": "array",
                    "items": {
                      "type": "string"
                    }
                  },
                  "timeout": {
                    "type": "integer",
                    "description": "Maximum time, in seconds, to wait for an answer. Optional. Default is 60."
                  },
                  "max_duration": {
                    "type": "integer",
                    "description": "Maximum duration, in seconds, allowed for the call. Optional. Default is 14400 (4 hours)."
                  },
                  "answer_on_bridge": {
                    "type": "boolean",
                    "description": "Delay answer until the B-leg answers. Optional. Default is false."
                  },
                  "call_state_url": {
                    "type": "array",
                    "items": {
                      "type": "string"
                    },
                    "description": "An array of call state event names to be notified about. Allowed event names are 'created', 'ringing', 'answered', and 'ended'. Optional. Default is ['ended']. Can be overwritten on each destination."
                  },
                  "result": {
                    "type": "object"
                  },
                  "serial": {
                    "description": "Array of destination objects to dial in order.",
                    "type": "array",
                    "items": {
                      "type": "object",
                      "properties": {
                        "to": {
                          "type": "string",
                          "description": "Phone number or SIP URI to dial. Required"
                        },
                        "from": {
                          "type": "string",
                          "description": "Caller ID number. Optional. Default is calling party caller ID number."
                        },
                        "timeout": {
                          "type": "string",
                          "description": "Maximum time, in seconds, to wait for destination to answer. Optional. Default is 60."
                        },
                        "call_state_url": {
                          "type": "string",
                          "description": "Webhook url to send call state change notifications to. Optional. Default is not set."
                        },
                        "call_state_events": {
                          "type": "array",
                          "description": "An array of call state event names to be notified about.",
                          "items": {
                            "type": "string",
                            "enum": ["created", "ringing", "answered", "ended"]
                          }
                        }
                      }
                    }
                  },
                  "parallel": {
                    "type": "array",
                    "description": "Array of destination objects to dial simultaneously.",
                    "items": {
                      "type": "object",
                      "properties": {
                        "to": {
                          "type": "string",
                          "description": "Phone number or SIP URI to dial. Required"
                        },
                        "from": {
                          "type": "string",
                          "description": "Caller ID number. Optional. Default is calling party caller ID number."
                        },
                        "timeout": {
                          "type": "string",
                          "description": "Maximum time, in seconds, to wait for destination to answer. Optional. Default is 60."
                        },
                        "call_state_url": {
                          "type": "string",
                          "description": "Webhook url to send call state change notifications to. Optional. Default is not set."
                        },
                        "call_state_events": {
                          "type": "array",
                          "description": "An array of call state event names to be notified about.",
                          "items": {
                            "type": "string",
                            "enum": ["created", "ringing", "answered", "ended"]
                          }
                        }
                      }
                    }
                  },
                  "to": {
                    "type": "string",
                    "description": "Single destination to dial. Possible values are a phone number (i.e.: \"+15552345678\") or sip uri (i.e. \"sip:alice@example.com\")."
                  }
                }
              },
              "hangup": {
                "type": "string",
                "enum": ["hangup", "busy", "decline"]
              },
              "join_room": {
                "type": "object",
                "properties": {
                  "name": {
                    "type": "string"
                  }
                }
              },
              "play": {
                "type": "object",
                "properties": {
                  "url": {
                    "type": "string"
                  },
                  "urls": {
                    "type": "array",
                    "items": {
                      "type": "string"
                    }
                  },
                  "volume": {
                    "type": "integer",
                    "description": "Optional volume gain to apply to played URLs. Allowed values from -40.0 to 40.0. Default 0"
                  },
                  "say_voice": {
                    "type": "string",
                    "description": "Optional voice to use with say: for text to speech. Default is Polly.Salli."
                  },
                  "say_language": {
                    "type": "string",
                    "description": "Optional language to use with say: for text to speech. Default is en-US."
                  },
                  "say_gender": {
                    "type": "string",
                    "description": "Optional gender to use with say: for text to speech. Default is female."
                  }
                }
              },
              "prompt": {
                "type": "object",
                "properties": {
                  "play": {
                    "type": "array",
                    "description": "URL or array of URLs to play",
                    "items": {
                      "type": "string"
                    }
                  },
                  "volume": {
                    "type": "number",
                    "description": "Optional volume gain to apply to played URLs. Allowed values from -40.0 to 40.0. Default 0."
                  },
                  "say_voice": {
                    "type": "string",
                    "description": "Optional voice to use with say: for text to speech. Default is Default is Polly.Salli."
                  },
                  "say_language": {
                    "type": "string",
                    "description": "Optional language to use with say: for text to speech. Default is en-US."
                  },
                  "say_gender": {
                    "type": "string",
                    "description": "Optional gender to use with say: for text to speech. Default is female."
                  },
                  "max_digits": {
                    "type": "number",
                    "description": "Optional number of digits to collect. Default 1."
                  },
                  "terminators": {
                    "type": "string",
                    "description": "Optional digits that terminate digit collection. Default unset."
                  },
                  "digit_timeout": {
                    "type": "number",
                    "description": "Optional time in seconds to wait for next digit. Default 5.0."
                  },
                  "initial_timeout": {
                    "type": "number",
                    "description": "Optional time in seconds to wait for start of input. Default 5.0."
                  },
                  "speech_timeout": {
                    "type": "number",
                    "description": "Optional max time in seconds to wait for speech result. Default unset."
                  },
                  "speech_end_timeout": {
                    "type": "number",
                    "description": "Optional time in seconds to wait for end of speech utterance. Default unset."
                  },
                  "speech_language": {
                    "type": "string",
                    "description": "Optional language to detect speech in."
                  },
                  "speech_hints": {
                    "type": "array",
                    "items": {
                      "type": "string"
                    }
                  },
                  "result": {
                    "type": "object",
                    "description": "Set up a switch on return_value by using an object"
                  }
                }
              },
              "record": {
                "type": "object",
                "properties": {
                  "stereo": {
                    "type": "boolean",
                    "description": "Whether to record in stereo mode. Optional. Default false."
                  },
                  "format": {
                    "type": "string",
                    "description": "Optional format ('wav' or 'mp3'). Default 'wav'.",
                    "enum": ["wav", "mp3"]
                  },
                  "direction": {
                    "type": "string",
                    "description": "Optional direction of the audio to record: 'speak' for what party says, 'hear' for what party hears. Default 'speak'.",
                    "enum": ["listen", "speak", "both"]
                  },
                  "terminators": {
                    "type": "string",
                    "description": "Optional string of digits that will stop the recording when pressed. Default '#'."
                  },
                  "beep": {
                    "type": "boolean",
                    "description": "Whether to play a beep before recording. Optional. Default false."
                  },
                  "input_sensitivity": {
                    "type": "number",
                    "description": "How sensitive the recording voice activity detector is to background noise. A larger value is more sensitive."
                  },
                  "initial_timeout": {
                    "type": "number",
                    "description": "How long, in seconds, to wait for speech to start. Optional. Default 4.0."
                  },
                  "end_silence_timeout": {
                    "type": "number",
                    "description": "How much silence, in seconds, will end the recording"
                  }
                }
              },
              "record_call": {
                "type": "object",
                "description": "Record call in the background.",
                "properties": {
                  "control_id": {
                    "type": "string",
                    "description": "Optional identifier for this recording, to use with 'stop_call_record'. Default is generated and saved to 'record_control_id' variable"
                  },
                  "stereo": {
                    "type": "boolean",
                    "description": "Whether to record in stereo mode. Optional. Default false."
                  },
                  "format": {
                    "type": "string",
                    "enum": ["wav", "mp3"]
                  },
                  "direction": {
                    "type": "string",
                    "description": "Optional direction of the audio to record: 'speak' for what party says, 'hear' for what party hears. Default 'speak'.",
                    "enum": ["listen", "speak", "both"]
                  },
                  "terminators": {
                    "type": "string",
                    "description": "Optional string of digits that will stop the recording when pressed. Default is unset."
                  },
                  "beep": {
                    "type": "boolean",
                    "description": "Whether to play a beep before recording. Optional. Default false."
                  },
                  "input_sensitivity": {
                    "type": "number",
                    "description": "How sensitive the recording voice activity detector is to background noise. A larger value is more sensitive."
                  },
                  "initial_timeout": {
                    "type": "number",
                    "description": "How long, in seconds, to wait for speech to start. Optional. Default 4.0."
                  },
                  "end_silence_timeout": {
                    "type": "number",
                    "description": "How much silence, in seconds, will end the recording"
                  }
                }
              },
              "send_digits": {
                "type": "string",
                "description": "The digits to send. Required. Valid values are 0123456789*#ABCDWw. Character W is a 1 second delay, and w is a 500 ms delay."
              },
              "send_fax": {
                "type": "object",
                "properties": {
                  "document": {
                    "type": "string",
                    "description": "Required URL to the PDF document to fax."
                  },
                  "header_info": {
                    "type": "string",
                    "description": "Optional text to add to the fax header. Default is not set."
                  },
                  "identity": {
                    "type": "string",
                    "description": "Optional station identity to report. Default is the caller ID number."
                  }
                }
              },
              "send_sms": {
                "type": "object",
                "properties": {
                  "to_number": {
                    "type": "string",
                    "description": "Phone number to send SMS message to in e.164 format. Required."
                  },
                  "from_number": {
                    "type": "string",
                    "description": "Phone number SMS message will be sent from. Required."
                  },
                  "body": {
                    "type": "string",
                    "description": "Body of the message. Required unless media is included."
                  },
                  "media": {
                    "type": "array",
                    "description": "Array of media URLs to include in the message. Required unless body is included.",
                    "items": {
                      "type": "string"
                    }
                  },
                  "region": {
                    "type": "string",
                    "description": "Region of the world to originate the message from. A default is picked based on account preferences or device location."
                  },
                  "tags": {
                    "type": "array",
                    "description": "Array of tags to associate with the message to facilitate log searches.",
                    "items": {
                      "type": "string"
                    }
                  }
                },
                "required": ["from_number", "to_number", "body"]
              },
              "sip_refer": {
                "type": "object",
                "properties": {
                  "to_uri": {
                    "type": "string",
                    "description": "SIP URI to REFER to. Required."
                  },
                  "result": {
                    "type": "object",
                    "description": "Set up a switch on return_value by using an object"
                  }
                },
                "required": ["to_uri"]
              },
              "stop_record_call": {
                "type": "string",
                "description": "Optional identifier for the recording to stop. If not set, the last recording started will be stopped"
              },
              "stop_tap": {
                "type": "string",
                "description": "Optional ID of the tap to stop. If not set, the last tap started will be stopped."
              },
              "tap": {
                "type": "object",
                "properties": {
                  "uri": {
                    "type": "string",
                    "description": "Required destination of the tap media stream. rtp://IP:port, ws://example.com, or wss://example.com."
                  },
                  "control_id": {
                    "type": "string",
                    "description": "Optional identifier for this tap to use with stop_tap. Default is generated and stored in tap_control_id variable."
                  },
                  "direction": {
                    "type": "string",
                    "description": "Direction of the audio to tap: speak for what party says, hear for what party hears, both for what party hears and says. Optional. Default is both",
                    "enum": ["hear", "speak"]
                  },
                  "codec": {
                    "type": "string",
                    "description": "PCMU or PCMA. Optional. Default PCMU.",
                    "enum": ["PCMU", "PCMA"]
                  },
                  "rtp_ptime": {
                    "type": "number",
                    "description": "If using a rtp:// URI, this optional parameter can set the packetization time of the media in milliseconds. Optional. Default 20 ms."
                  }
                }
              },
              "ai": {
                "type": "object",
                "properties": {
                  "voice": {
                    "type": "string",
                    "description": "TTS voice the AI agent will use. Optional. Default is picked by SignalWire"
                  },
                  "prompt": {
                    "type": "object",
                    "properties": {
                      "text": {
                        "type": "string",
                        "description": "The instructions to send to the agent. Optional. Default is not set."
                      },
                      "temperature": {
                        "type": "number",
                        "description": "Randomness setting. Float value between 0.0 and 2.0. Closer to 0 will make the output less random. Optional. Default is 1.0."
                      },
                      "top_p": {
                        "type": "number",
                        "description": "Randomness setting. Alternative to temperature. Float value between 0.0 and 1.0. Closer to 0 will make the output less random. Optional. Default is 1.0."
                      },
                      "confidence": {
                        "type": "number",
                        "description": "Threshold to fire a speech-detect event at the end of the utterance. Float value between 0.0 and 1.0. Decreasing this value will reduce the pause after the user speaks, but may introduce false positives. Optional. Default is 0.6."
                      },
                      "presence_penalty": {
                        "type": "number",
                        "description": "Aversion to staying on topic. Float value between -2.0 and 2.0. Positive values increase the model's likelihood to talk about new topics. Optional. Default is 0."
                      },
                      "frequency_penalty": {
                        "type": "number",
                        "description": "Aversion to repeating lines. Float value between -2.0 and 2.0. Positive values decrease the model's likelihood to repeat the same line verbatim. Optional. Default is 0."
                      },
                      "result": {
                        "type": "object"
                      }
                    }
                  },
                  "post_prompt": {
                    "type": "object",
                    "properties": {
                      "text": {
                        "type": "string",
                        "description": "The instructions to send to the agent. Optional. Default is not set."
                      },
                      "temperature": {
                        "type": "number",
                        "description": "Randomness setting. Float value between 0.0 and 2.0. Closer to 0 will make the output less random. Optional. Default is 1.0."
                      },
                      "top_p": {
                        "type": "number",
                        "description": "Randomness setting. Alternative to temperature. Float value between 0.0 and 1.0. Closer to 0 will make the output less random. Optional. Default is 1.0."
                      },
                      "confidence": {
                        "type": "number",
                        "description": "Threshold to fire a speech-detect event at the end of the utterance. Float value between 0.0 and 1.0. Decreasing this value will reduce the pause after the user speaks, but may introduce false positives. Optional. Default is 0.6."
                      },
                      "presence_penalty": {
                        "type": "number",
                        "description": "Aversion to staying on topic. Float value between -2.0 and 2.0. Positive values increase the model's likelihood to talk about new topics. Optional. Default is 0."
                      },
                      "frequency_penalty": {
                        "type": "number",
                        "description": "Aversion to repeating lines. Float value between -2.0 and 2.0. Positive values decrease the model's likelihood to repeat the same line verbatim. Optional. Default is 0."
                      },
                      "result": {
                        "type": "object"
                      }
                    }
                  },
                  "post_prompt_url": {
                    "type": "string",
                    "description": "URL to send status callbacks and reports to."
                  },
                  "post_prompt_auth_user": {
                    "type": "string",
                    "description": "Auth username for post_url endpoint. Optional. Default is not set."
                  },
                  "post_prompt_auth_password": {
                    "type": "string",
                    "description": "Auth password for post_url endpoint. Optional. Default is not set."
                  },
                  "params": {
                    "type": "object",
                    "properties": {
                      "direction": {
                        "type": "string",
                        "description": "Forces the direction of the call to the assistant. Valid values are 'inbound' and 'outbound'. Optional. Default is the natural direction of the call.",
                        "enum": ["inbound", "outbound"]
                      },
                      "wait_for_user": {
                        "type": "boolean",
                        "description": "When false, AI agent will initialize dialogue after call is setup. When true, agent will wait for the user to speak first. Optional. Default is false."
                      },
                      "end_of_speech_timeout": {
                        "type": "number",
                        "description": "Amount of silence, in ms, at the end of an utterance to detect end of speech. Allowed values from 250-10,000. Optional. Default is 2000."
                      },
                      "attention_timeout": {
                        "type": "number",
                        "description": "Amount of time, in ms, to wait before prompting the user to respond. Allowed values from 10,000-600,000. May be set to 0 to disable. Optional. Default is 10000."
                      },
                      "inactivity_timeout": {
                        "type": "number",
                        "description": "Amount of time, in ms, to wait before exiting the app due to inactivity. Allowed values from 10,000-3,600,000. Optional. Default is 600000 (10 mins)."
                      },
                      "background_file": {
                        "type": "string",
                        "description": "URL of audio file to play in the background while AI plays in foreground. Optional. Default is not set."
                      },
                      "background_file_loops": {
                        "type": "number",
                        "description": "Maximum number of times to loop playing the background file. Optional. Default is undefined, so will loop indefinitely."
                      },
                      "background_file_volume": {
                        "type": "number",
                        "description": "Adjust the volume of the background file play. Allowed values from -40-40. Optional. Default 0 (the natural volume of the file)."
                      },
                      "ai_volume": {
                        "type": "number",
                        "description": "Adjust the volume of the AI. Allowed values from -50-50. Optional. Default is 0 (the natural volume of the AI)."
                      },
                      "local_tz": {
                        "type": "string",
                        "description": "The local timezone setting for the AI. Value should use IANA TZ ID. Default is GMT."
                      },
                      "conscience": {
                        "type": "boolean",
                        "description": "Strictly enforce prompts. Optional. Default is true."
                      },
                      "save_conversation": {
                        "type": "boolean",
                        "description": "Send a summary of the conversation after the call ends. This requires a post_url to be set in the ai parameters and the conversation_id defined below. This eliminates the need for a post_prompt in the ai parameters. Optional. Default is false."
                      },
                      "conversation_id": {
                        "type": "string",
                        "description": "Unique identifier for this conversation to be used to retain info from call to call. Optional. Default is undefined."
                      },
                      "digit_timeout": {
                        "type": "number",
                        "description": "Time, in ms, at the end of digit input to detect end of input. Allowed values from 250-10,000. Optional. Default is 3000."
                      },
                      "digit_terminators": {
                        "type": "string",
                        "description": "DTMF digit, as a string, to signal the end of input (ex: '#'). Optional. Default is undefined."
                      },
                      "energy_level": {
                        "type": "number",
                        "description": "Amount of energy necessary for bot to hear you (in dB). Allowed values from 0-100. Optional. Default is 52."
                      },
                      "swaig_allow_swml": {
                        "type": "boolean",
                        "description": "Allow SWAIG functions to return SWML to be executed by the call. Optional. Default is true."
                      }
                    }
                  },
                  "SWAIG": {
                    "type": "object",
                    "properties": {
                      "defaults": {
                        "type": "object",
                        "properties": {
                          "web_hook_url": {
                            "type": "string",
                            "description": "Default URL to send status callbacks and reports to. Optional. Default is not set."
                          },
                          "web_hook_auth_user": {
                            "type": "string",
                            "description": "Default auth username for web_hook_url endpoint. Optional. Default is not set."
                          },
                          "web_hook_auth_password": {
                            "type": "string",
                            "description": "Default auth password for web_hook_url endpoint. Optional. Default is not set."
                          }
                        }
                      },
                      "native_functions": {
                        "type": "array",
                        "description": "Prebuilt functions the AI agent is able to call.",
                        "items": {
                          "type": "string"
                        }
                      },
                      "includes": {
                        "type": "array",
                        "description": "n array of objects to include remote function signatures. The object fields are url to specify where the remote functions are defined and functions which is an array of the function names as strings.",
                        "items": {
                          "type": "object",
                          "properties": {}
                        }
                      },
                      "functions": {
                        "type": "array",
                        "description": "An array of JSON objects to define functions that can be executed during the interaction with the AI. Optional. Default is not set.",
                        "items": {
                          "type": "object",
                          "properties": {
                            "active": {
                              "type": "boolean",
                              "description": "Whether the function is active. Optional. Default is true."
                            },
                            "function": {
                              "type": "string",
                              "description": "A unique name for the function. For example, 'get_weather'. Required."
                            },
                            "meta_data": {
                              "type": "object",
                              "description": "A JSON object containing any metadata, as a key-value map. Optional. Default is not set.",
                              "properties": {
                                "meta_data_token": {
                                  "type": "object",
                                  "description": "Scoping token for meta_data. If not supplied, metadata will be scoped to function's web_hook_url. Optional. Default is set by SignalWire."
                                }
                              }
                            },
                            "data_map": {
                              "anyOf": [
                                { "$ref": "#/definitions/data_map" },
                                {
                                  "type": "array",
                                  "description": "An object containing properties to process or validate the input, perform actions based on the input, or connect to external APIs or services in a serverless fashion.",
                                  "items": {
                                    "$ref": "#/definitions/data_map"
                                  }
                                }
                              ]
                            },
                            "web_hook_url": {
                              "type": "string",
                              "description": "Function-specific URL to send status callbacks and reports to. Takes precedence over a default setting."
                            },
                            "web_hook_auth_user": {
                              "type": "string",
                              "description": "Function-specific auth username for web_hook_url endpoint. Takes precedence over a default setting. Optional. Default is not set."
                            },
                            "web_hook_auth_pass": {
                              "type": "string",
                              "description": "Function-specific auth password for web_hook_url endpoint. Takes precedence over a default setting. Optional. Default is not set."
                            },
                            "purpose": {
                              "type": "string",
                              "description": "A description of the context and purpose of the function, to explain to the agent when to use it. Required."
                            },
                            "argument": {
                              "type": "object",
                              "description": "A JSON object defining the input that should be passed to the function. The fields of this object are the following two parameters. Required.",
                              "properties": {
                                "type": {
                                  "type": "string",
                                  "description": "The type of argument the AI is passing to the function. Possible values are 'string' and 'object'. Required.",
                                  "enum": ["string", "object"]
                                },
                                "properties": {
                                  "type": "object",
                                  "description": "A JSON object describing the argument. The value is set by the user. For example, \"location\" for a location-based search or \"company\" if searching a database of companies. This object has sub-parameters description and type to help define the property. ",
                                  "patternProperties": {
                                    "[a-z]": {
                                      "properties": {
                                        "type": {
                                          "type": "string"
                                        },
                                        "description": {
                                          "type": "string"
                                        }
                                      }
                                    }
                                  }
                                }
                              }
                            }
                          }
                        }
                      }
                    }
                  },
                  "hints": {
                    "type": "array",
                    "items": {
                      "type": "string"
                    }
                  },
                  "languages": {
                    "type": "array",
                    "items": {
                      "type": "object",
                      "properties": {
                        "name": {
                          "type": "string",
                          "description": "Name of the language. For example, \"French\". Optional. Default is \"English\"."
                        },
                        "code": {
                          "type": "string",
                          "description": "Language code. For example, \"fr-FR\". Optional. Default is \"en-us\"."
                        },
                        "voice": {
                          "type": "string",
                          "description": "Voice to use for the language. For example, \"fr-FR-Neural2-B\". Optional. Default is picked by SignalWire."
                        },
                        "fillers": {
                          "type": "array",
                          "description": "An array of strings to be used as fillers in the conversation. Optional. Default is not set.",
                          "items": {
                            "type": "string"
                          }
                        },
                        "engine": {
                          "type": "string",
                          "description": "The engine to use for the language. For example, \"elevenlabs\". Optional. Default is \"gcloud\"."
                        }
                      }
                    }
                  },
                  "pronounce": {
                    "type": "array",
                    "items": {
                      "type": "object",
                      "properties": {
                        "replace": {
                          "type": "string",
                          "description": "The expression to replace. Required."
                        },
                        "with": {
                          "type": "string",
                          "description": "The phonetic spelling of the expression. Required."
                        },
                        "ignore_case": {
                          "type": "boolean",
                          "description": "Whether the pronunciation replacement should ignore case. Optional. Default is true."
                        }
                      }
                    }
                  }
                }
              }
            }
          }
        }
      }
    }
  },
  "definitions": {
    "data_map": {
      "type": "object",
      "properties": {
        "expressions": {
          "type": "array",
          "description": "An array of objects that define patterns and corresponding actions.",
          "items": {
            "type": "object",
            "properties": {
              "string": {
                "type": "string",
                "description": "The actual input or value from the user or system."
              },
              "pattern": {
                "type": "string",
                "description": "A regular expression pattern to validate or match the string."
              },
              "output": {
                "type": "object",
                "description": "Defines the response or action to be taken when the pattern matches.",
                "properties": {
                  "response": {
                    "type": "string",
                    "description": "A static response text or message."
                  },
                  "action": {
                    "type": "array",
                    "description": "A list of actions to be performed upon matching",
                    "items": {
                      "type": "object",
                      "properties": {
                        "SWML": {
                          "type": "object",
                          "description": "A SWML object to be executed."
                        },
                        "say": {
                          "type": "string",
                          "description": "A message to be spoken by the AI agent."
                        },
                        "stop": {
                          "type": "boolean",
                          "description": "Whether to stop the conversation"
                        },
                        "toggle_functions": {
                          "type": "array",
                          "description": "Whether to toggle the functions on or off.",
                          "items": {
                            "type": "object",
                            "properties": {
                              "active": {
                                "type": "boolean",
                                "description": "Whether to activate or deactivate the functions. Default is true"
                              },
                              "function": {
                                "type": "array",
                                "description": "A list of functions to toggle.",
                                "items": {
                                  "type": "object"
                                }
                              }
                            }
                          }
                        },
                        "back_to_back_functions": {
                          "type": "boolean",
                          "description": "Whether to execute functions back to back. Default is false"
                        },
                        "set_meta_data": {
                          "type": "object",
                          "description": "A JSON object containing any metadata, as a key-value map."
                        },
                        "playback_bg": {
                          "type": "object",
                          "description": "A JSON object containing the audio file to play.",
                          "properties": {
                            "file": {
                              "type": "string",
                              "description": "URL or filepath of the audio file to play."
                            },
                            "wait": {
                              "type": "boolean",
                              "description": "Whether to wait for the audio file to finish playing before continuing. Default is false"
                            }
                          }
                        },
                        "stop_playback_bg": {
                          "type": "boolean",
                          "description": "Whether to stop the background audio file."
                        },
                        "user_input": {
                          "type": "string",
                          "description": "used to inject text into the users queue as if they input the data themselves."
                        },
                        "context_switch": {
                          "type": "object",
                          "description": "A JSON object containing the context to switch to. Default is not set.",
                          "properties": {
                            "system_prompt": {
                              "type": "string",
                              "description": "The instructions to send to the agent. Default is not set."
                            },
                            "consolidate": {
                              "type": "boolean",
                              "description": "Whether to consolidate the context. Default is false"
                            },
                            "user_prompt": {
                              "type": "string",
                              "description": "A string serving as simulated user input for the AI Agent. During a context_switch in the AI's prompt, the user_prompt offers the AI pre-established context or guidance. Default is not set"
                            }
                          }
                        }
                      }
                    }
                  }
                }
              }
            }
          }
        },
        "webhooks": {
          "type": "array",
          "description": "An array of objects that define external API calls.",
          "items": {
            "type": "object",
            "properties": {
              "url": {
                "type": "string",
                "description": "The endpoint for the external service or API."
              },
              "headers": {
                "type": "object",
                "description": "Any necessary headers for the API call."
              },
              "method": {
                "type": "string",
                "description": "The HTTP method (GET, POST, etc.) for the API call.",
                "enum": ["POST", "GET"]
              },
              "output": {
                "type": "object",
                "description": "Defines the format or structure of the response from the API.",
                "properties": {
                  "action": {
                    "type": "array",
                    "description": "A list of actions to be performed upon matching.",
                    "items": {
                      "type": "object"
                    }
                  },
                  "response": {
                    "type": "string",
                    "description": "A static response text or message based on the outcome of the API call."
                  }
                }
              }
            }
          }
        }
      }
    }
  }
}
